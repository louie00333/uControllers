Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
                              Lab4.o (__udivmodhi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
                              hd44780.o (__divmodhi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
                              Lab4.o (__tablejump2__)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
                              Lab4.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
                              Lab4.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
                              Lab4.o (__umulhisi3)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

uart_tx_buf         0x28              uart_functions.o
twi_state           0x1               twi_master.o
notes               0x1               Lab4.o
twi_buf             0x2               twi_master.o
song                0x1               Lab4.o
lcd_string_array    0x20              hd44780.o
lm73_wr_buf         0x2               lm73_functions_skel.o
max_beat            0x2               Lab4.o
twi_bus_addr        0x1               twi_master.o
beat                0x2               Lab4.o
lcd_str             0x10              hd44780.o
twi_msg_size        0x1               twi_master.o
lm73_rd_buf         0x2               lm73_functions_skel.o
uart_rx_buf         0x28              uart_functions.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
LOAD Lab4.o
LOAD hd44780.o
LOAD twi_master.o
LOAD uart_functions.o
LOAD lm73_functions_skel.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libatmega128.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ff00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x2222
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c      0x11c Lab4.o
 .progmem.gcc_sw_table
                0x00000000000001a8       0xa2 twi_master.o
                0x000000000000024a                . = ALIGN (0x2)
                0x000000000000024a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000024a        0x0 linker stubs
 *(.trampolines*)
                0x000000000000024a                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000000000024a                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000024a                __ctors_start = .
 *(.ctors)
                0x000000000000024a                __ctors_end = .
                0x000000000000024a                __dtors_start = .
 *(.dtors)
                0x000000000000024a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000024a        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000024a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000024a        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000256       0x1a /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
                0x0000000000000256                __do_copy_data
 .init4         0x0000000000000270       0x10 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000270                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000280        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x0000000000000288        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000288                __vector_22
                0x0000000000000288                __vector_28
                0x0000000000000288                __vector_1
                0x0000000000000288                __vector_32
                0x0000000000000288                __vector_34
                0x0000000000000288                __vector_24
                0x0000000000000288                __bad_interrupt
                0x0000000000000288                __vector_6
                0x0000000000000288                __vector_31
                0x0000000000000288                __vector_3
                0x0000000000000288                __vector_23
                0x0000000000000288                __vector_30
                0x0000000000000288                __vector_25
                0x0000000000000288                __vector_11
                0x0000000000000288                __vector_13
                0x0000000000000288                __vector_17
                0x0000000000000288                __vector_19
                0x0000000000000288                __vector_7
                0x0000000000000288                __vector_27
                0x0000000000000288                __vector_5
                0x0000000000000288                __vector_4
                0x0000000000000288                __vector_9
                0x0000000000000288                __vector_2
                0x0000000000000288                __vector_21
                0x0000000000000288                __vector_15
                0x0000000000000288                __vector_29
                0x0000000000000288                __vector_8
                0x0000000000000288                __vector_26
                0x0000000000000288                __vector_14
                0x0000000000000288                __vector_10
                0x0000000000000288                __vector_18
                0x0000000000000288                __vector_20
 .text          0x000000000000028c     0x1098 Lab4.o
                0x000000000000028c                play_note
                0x00000000000008ce                play_rest
                0x00000000000008e4                music_off
                0x00000000000008f2                music_init
                0x0000000000000932                song0
                0x0000000000000d52                play_song
                0x0000000000000d5a                music_on
                0x0000000000000d72                SPI_read
                0x0000000000000d86                chk_buttons
                0x0000000000000dc6                segsum
                0x0000000000000f24                displaySwitch
                0x0000000000000fa6                ButtonCheck
                0x0000000000001012                ClockCounterCorrection
                0x000000000000104a                EncoderValueDirection
                0x00000000000010a0                __vector_16
                0x000000000000112c                __vector_12
                0x00000000000011aa                AlarmSetMode
                0x000000000000123a                VolumeSetMode
                0x00000000000012a2                init
 .text          0x0000000000001324      0x952 hd44780.o
                0x0000000000001324                send_lcd
                0x000000000000134e                refresh_lcd
                0x00000000000013f0                set_custom_character
                0x000000000000145c                set_cursor
                0x0000000000001488                uint2lcd
                0x000000000000155c                int2lcd
                0x0000000000001594                cursor_on
                0x00000000000015b8                cursor_off
                0x00000000000015dc                shift_right
                0x0000000000001600                shift_left
                0x0000000000001624                strobe_lcd
                0x0000000000001636                clear_display
                0x0000000000001666                cursor_home
                0x0000000000001696                line2_col1
                0x00000000000016ba                line1_col1
                0x00000000000016de                fill_spaces
                0x0000000000001712                char2lcd
                0x0000000000001736                string2lcd
                0x0000000000001790                lcd_init
                0x0000000000001914                lcd_int32
                0x0000000000001ac0                lcd_int16
 .text          0x0000000000001c76      0x17c twi_master.o
                0x0000000000001c76                __vector_33
                0x0000000000001d94                twi_busy
                0x0000000000001d9c                twi_start_wr
                0x0000000000001dbe                twi_start_rd
                0x0000000000001de0                init_twi
 .text          0x0000000000001df2       0x7e uart_functions.o
                0x0000000000001df2                uart_putc
                0x0000000000001dfe                uart_puts
                0x0000000000001e1a                uart_puts_p
                0x0000000000001e40                uart_init
                0x0000000000001e5a                uart_getc
 .text          0x0000000000001e70        0x4 lm73_functions_skel.o
                0x0000000000001e70                lm73_temp_convert
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .text          0x0000000000001e74        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000001e74                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000001e74      0x2a8 Lab4.o
                0x0000000000001e74                main
 .text.libgcc.mul
                0x000000000000211c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000000000000211c       0x28 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
                0x000000000000211c                __udivmodhi4
 .text.libgcc   0x0000000000002144        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000002144        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000002144        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000002144        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000002144        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000002144        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000002144       0x28 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000002144                __divmodhi4
                0x0000000000002144                _div
 .text.libgcc   0x000000000000216c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x000000000000216c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x000000000000216c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x000000000000216c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x000000000000216c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x000000000000216c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x000000000000216c       0x2e /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
                0x000000000000216c                __divmodsi4
 .text.libgcc   0x000000000000219a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x000000000000219a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x000000000000219a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x000000000000219a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x000000000000219a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x000000000000219a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x000000000000219a       0x10 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
                0x000000000000219a                __negsi2
 .text.libgcc   0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x00000000000021aa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc   0x00000000000021aa       0x12 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
                0x00000000000021aa                __tablejump2__
 .text.libgcc.prologue
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000021bc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000021bc       0x1e /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
                0x00000000000021bc                __umulhisi3
 .text.libgcc.div
                0x00000000000021da        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000000021da        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000000021da        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000000021da        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000000021da        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x00000000000021da        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x00000000000021da        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000021da       0x44 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                0x00000000000021da                __udivmodsi4
 .text.libgcc   0x000000000000221e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000000000000221e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000000000000221e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000000000000221e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x000000000000221e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                0x000000000000221e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000221e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                0x000000000000221e                exit
                0x000000000000221e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000221e        0x4 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000002222                _etext = .

.data           0x0000000000800100       0x2e load address 0x0000000000002222
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100       0x28 Lab4.o
                0x0000000000800105                DecHex
                0x0000000000800106                secondsFlag
                0x0000000000800107                hex_to_7seg
                0x0000000000800117                dec_to_7seg
                0x0000000000800123                segment_data
 .data          0x0000000000800128        0x0 hd44780.o
 .data          0x0000000000800128        0x0 twi_master.o
 .data          0x0000000000800128        0x0 uart_functions.o
 .data          0x0000000000800128        0x0 lm73_functions_skel.o
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800128        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800128        0x6 Lab4.o
 *(.gnu.linkonce.d*)
                0x000000000080012e                . = ALIGN (0x2)
                0x000000000080012e                _edata = .
                0x000000000080012e                PROVIDE (__data_end, .)

.bss            0x000000000080012e       0xa8
                0x000000000080012e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080012e        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x000000000080012e       0x17 Lab4.o
                0x000000000080012e                currentTime
                0x0000000000800130                snoozeFlag
 .bss           0x0000000000800145        0x1 hd44780.o
 .bss           0x0000000000800146        0x1 twi_master.o
 .bss           0x0000000000800147        0x0 uart_functions.o
 .bss           0x0000000000800147        0x0 lm73_functions_skel.o
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_umulhisi3.o)
 .bss           0x0000000000800147        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800147        0x6 Lab4.o
                0x0000000000800147                notes
                0x0000000000800148                song
                0x0000000000800149                max_beat
                0x000000000080014b                beat
 COMMON         0x000000000080014d       0x30 hd44780.o
                0x000000000080014d                lcd_string_array
                0x000000000080016d                lcd_str
 COMMON         0x000000000080017d        0x5 twi_master.o
                0x000000000080017d                twi_state
                0x000000000080017e                twi_buf
                0x0000000000800180                twi_bus_addr
                0x0000000000800181                twi_msg_size
 COMMON         0x0000000000800182       0x50 uart_functions.o
                0x0000000000800182                uart_tx_buf
                0x00000000008001aa                uart_rx_buf
 COMMON         0x00000000008001d2        0x4 lm73_functions_skel.o
                0x00000000008001d2                lm73_wr_buf
                0x00000000008001d4                lm73_rd_buf
                0x00000000008001d6                PROVIDE (__bss_end, .)
                0x0000000000002222                __data_load_start = LOADADDR (.data)
                0x0000000000002250                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001d6        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008001d6                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x4ff8
 *(.stab)
 .stab          0x0000000000000000     0x27d8 Lab4.o
 .stab          0x00000000000027d8     0x183c hd44780.o
                                       0x1a70 (size before relaxing)
 .stab          0x0000000000004014      0x69c twi_master.o
                                        0x894 (size before relaxing)
 .stab          0x00000000000046b0      0x5e8 uart_functions.o
                                        0x804 (size before relaxing)
 .stab          0x0000000000004c98      0x360 lm73_functions_skel.o
                                        0x528 (size before relaxing)

.stabstr        0x0000000000000000     0x18ef
 *(.stabstr)
 .stabstr       0x0000000000000000     0x18ef Lab4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 Lab4.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 hd44780.o
 .comment       0x0000000000000011       0x12 twi_master.o
 .comment       0x0000000000000011       0x12 uart_functions.o
 .comment       0x0000000000000011       0x12 lm73_functions_skel.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x780
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_abbrev   0x0000000000000000      0x718
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x27d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x27d /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Lab4.elf elf32-avr)
LOAD linker stubs
